{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/codes/Basics/errors.js","webpack:///./src/codes/Basics/index.js","webpack:///./src/codes/Basics/success.js","webpack:///./src/codes/Users/errors.js","webpack:///./src/codes/Users/index.js","webpack:///./src/codes/Users/success.js","webpack:///./src/codes/index.js","webpack:///./src/constantes.js","webpack:///./src/database/schemas/history.js","webpack:///./src/database/schemas/index.js","webpack:///./src/database/schemas/users.js","webpack:///./src/helpers/GPIO.js","webpack:///./src/index.js","webpack:///./src/initialize/EnvVar.js","webpack:///./src/initialize/NODE_ENV/auth.js","webpack:///./src/initialize/NODE_ENV/database.js","webpack:///./src/initialize/NODE_ENV/index.js","webpack:///./src/initialize/NODE_ENV/server.js","webpack:///./src/initialize/express.js","webpack:///./src/initialize/index.js","webpack:///./src/initialize/mongo.js","webpack:///./src/routes/gate/gate.js","webpack:///./src/routes/gate/index.js","webpack:///./src/routes/gate/middlewares/index.js","webpack:///./src/routes/gate/middlewares/toogle.js","webpack:///./src/routes/index.js","webpack:///./src/routes/users/index.js","webpack:///./src/routes/users/middlewares/authentification.js","webpack:///./src/routes/users/middlewares/deleteUser.js","webpack:///./src/routes/users/middlewares/helpers/checkIfDataExists.js","webpack:///./src/routes/users/middlewares/helpers/index.js","webpack:///./src/routes/users/middlewares/index.js","webpack:///./src/routes/users/middlewares/modifyUser.js","webpack:///./src/routes/users/middlewares/newUser.js","webpack:///./src/routes/users/users.js","webpack:///external \"body-parser\"","webpack:///external \"crypto\"","webpack:///external \"express\"","webpack:///external \"gpio\"","webpack:///external \"mongoose\"","webpack:///external \"my-own-logger\""],"names":["internalError","code","description","ok","emailExists","usernameExists","tokenExists","unknownTypeToCheck","userCreated","DB_HOSTNAME_DEV","DB_PORT_DEV","DB_NAME_DEV","DB_HOSTNAME_PROD","DB_PORT_PROD","DB_NAME_PROD","SERVER_PORT_DEV","SERVER_PORT_PROD","DEFAULT_TOKEN","historySchema","mongoose","Schema","token","Number","date","Date","action","String","versionKey","collection","usersSchema","lastname","name","username","type","unique","email","password","isAdmin","Boolean","RELAIS","gpio","export","direction","DIRECTION","OUT","interval","ready","turnOn","then","setTimeout","turnOff","reset","set","init","setEnvVar","ne","cte","defineToken","NODE_ENV","process","env","TOKEN","log","status","mode","value","defineDB","DB_HOSTNAME","DB_PORT","DB_NAME","definePort","SERVER_PORT","startServ","app","express","use","bodyParser","json","urlencoded","extended","rt","er","err","listen","startDB","url","options","promiseLibrary","Promise","useNewUrlParser","useFindAndModify","useCreateIndex","connectTimeoutMS","_mongooseConnectLogResult","error","connection","on","model","schemas","connect","GateRoute","Router","initializeRoute","put","mdl","toggle","UsersRoute","users","gate","initializeRoutes","callback","errors","authentificate","req","res","next","User","headers","query","find","data","send","length","filter","user","deleteUser","checkIfDataExists","result","body","userCode","basicsCode","modifyUser","isMailOk","isUsernameOk","register","crypto","randomBytes","toString","i","safePwd","createHash","update","digest","save","account","iErr","uSuc","suc","post","delete"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const internalError = {\r\n  code: 'e500',\r\n  description: 'internal error occured'\r\n}\r\n","import * as err from './errors'\r\nimport * as suc from './success'\r\n\r\nexport { err, suc }\r\n","export const ok = {\r\n  code: 's200',\r\n  description: 'everything is fine !'\r\n}\r\n","export const emailExists = {\r\n  code: 'e1',\r\n  description: 'email is already used because it was found in our database'\r\n}\r\n\r\nexport const usernameExists = {\r\n  code: 'e2',\r\n  description: 'username is already used because it was found in our database'\r\n}\r\nexport const tokenExists = {\r\n  code: 'e3',\r\n  description: 'token is already used because it was found in our database'\r\n}\r\nexport const unknownTypeToCheck= {\r\n  code: 'e4',\r\n  description: 'the type to check if it exist in our database is unknown'\r\n}\r\n","import * as err from './errors'\r\nimport * as suc from './success'\r\n\r\nexport { err, suc }\r\n","export const userCreated = {\r\n    code: 's1',\r\n    description: 'user was created !'\r\n}\r\n","import * as basicsCode from './Basics'\r\nimport * as userCode from './Users'\r\n\r\nexport { basicsCode, userCode }\r\n","\r\n\r\n//databse constantes\r\nexport const DB_HOSTNAME_DEV = \"localhost\"\r\nexport const DB_PORT_DEV = \"27017\"\r\nexport const DB_NAME_DEV = \"domotic\"\r\n\r\nexport const DB_HOSTNAME_PROD = \"localhost\"\r\nexport const DB_PORT_PROD = \"27017\"\r\nexport const DB_NAME_PROD = \"domotic\"\r\n\r\n\r\n//server constantes\r\nexport const SERVER_PORT_DEV = \"5973\" // port d'écoute du serveur en développement\r\nexport const SERVER_PORT_PROD = \"4957\" // port d'écoute du serveur en production\r\n\r\n//variables de développement\r\nexport const DEFAULT_TOKEN = \"8637104155366878\"\r\n","import mongoose from 'mongoose'\r\n\r\nconst historySchema = new mongoose.Schema({\r\n  token: Number,\r\n  date: Date,\r\n  action: String,\r\n}, {versionKey: false }, {collection: 'history'})\r\n\r\nexport default historySchema\r\n","import usersSchema from './users'\r\nimport historySchema from './history'\r\nexport { usersSchema, historySchema }\r\n","import mongoose from 'mongoose'\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  lastname: String,\r\n  name: String,\r\n  username:{type:String, unique:true},\r\n  email:{type:String, unique:true},\r\n  password: String,\r\n  token: String,\r\n  isAdmin: Boolean,\r\n}, {versionKey: false }, {collection: 'users'})\r\n\r\nexport default usersSchema\r\n","import gpio from 'gpio'\r\n\r\nexport const RELAIS = gpio.export(4, {\r\n  direction: gpio.DIRECTION.OUT,\r\n  interval: 500,\r\n  ready: () => {turnOn().then(setTimeout(turnOff(), 1000))}\r\n}) // = on connecte le relais au GPIO 4, et on le configure en sortie\r\n\r\nconst turnOn = async () => {\r\n  await RELAIS.reset() // on le remet à zéro au cas où\r\n  await RELAIS.set() // puis on le passe à 1\r\n}\r\nconst turnOff = async () => {\r\n  await RELAIS.reset()  // on éteint le relais\r\n}\r\n","import * as init from './initialize'\r\n\r\n//On démarre les différents services\r\ninit.setEnvVar()\r\n.then(init.startDB)\r\n.then(init.startServ)\r\n","import * as ne from './NODE_ENV'\r\n\r\nconst setEnvVar = async () => {\r\n  await ne.defineToken() // le token en mode développement\r\n  await ne.definePort() // le port du serveur\r\n  await ne.defineDB()// on crée les variables environnement pour gérer le database\r\n}\r\n\r\nexport default setEnvVar\r\n","import log from 'my-own-logger' // logger\r\nimport * as cte from '../../constantes' // on importe les valeurs des constantes qui sont exclues des exports github\r\n\r\nconst {DEFAULT_TOKEN} = cte\r\n\r\nconst defineToken = async (token) => {\r\n  const { NODE_ENV } = process.env\r\n  if (NODE_ENV === \"development\"){\r\n    if (!token){\r\n      await (process.env.TOKEN = DEFAULT_TOKEN)\r\n    }\r\n    else{\r\n      await (process.env.TOKEN = token)\r\n    }\r\n    log({name: \"Token\",\r\n      status:'reg',\r\n      mode:`dev`,\r\n      value: `${process.env.TOKEN}`})\r\n  }\r\n}\r\n\r\nexport default defineToken\r\n","import log from 'my-own-logger' // logger\r\nimport * as cte from '../../constantes' // on importe les valeurs des constantes qui sont exclues des exports github\r\n\r\n\r\nconst {DB_HOSTNAME_DEV} = cte\r\nconst {DB_PORT_DEV} = cte\r\nconst {DB_NAME_DEV} = cte\r\n\r\nconst {DB_HOSTNAME_PROD} = cte\r\nconst {DB_PORT_PROD} = cte\r\nconst {DB_NAME_PROD} = cte\r\n\r\n\r\nconst defineDB = async () => {\r\n  const { NODE_ENV } = process.env\r\n  if (NODE_ENV === 'development'){\r\n    await (process.env.DB_HOSTNAME = DB_HOSTNAME_DEV)\r\n    await (process.env.DB_PORT = DB_PORT_DEV)\r\n    await (process.env.DB_NAME = DB_NAME_DEV)\r\n    log({\r\n      name: \"ENV VAR\",\r\n      status:'reg',\r\n      mode: `dev`,\r\n      value: `dataBase variables`\r\n    })\r\n  }\r\n  else if(NODE_ENV === 'production '){\r\n    await (process.env.DB_HOSTNAME = DB_HOSTNAME_PROD)\r\n    await (process.env.DB_PORT = DB_HOSTNAME_PROD)\r\n    await (process.env.DB_NAME = DB_HOSTNAME_PROD)\r\n    log({\r\n      name: \"ENV VAR\",\r\n      status:'reg',\r\n      mode: `prod`,\r\n      value: `dataBase variables`\r\n    })\r\n  }\r\n  else{\r\n    log({\r\n      name: \"ENV VAR\",\r\n      status:'err',\r\n      value:`no env var for database have been defined cause NODE_ENV is not in development or in production`\r\n    })\r\n  }\r\n}\r\n\r\nexport default defineDB\r\n","import definePort from './server' //pour définir le port du server\r\nimport defineToken from './auth' //pour définir le token en mode développement\r\nimport defineDB from './database' // pour définir les consatntes de connexion à la base de données\r\n\r\nexport { definePort, defineToken, defineDB }\r\n","import log from 'my-own-logger' // logger\r\nimport * as cte from '../../constantes' // on importe les valeurs des constantes qui sont exclues des exports github\r\n\r\nconst {SERVER_PORT_DEV} = cte\r\nconst {SERVER_PORT_PROD} = cte\r\n\r\n\r\nconst definePort = async () => {\r\n  const { NODE_ENV } = process.env\r\n  if (NODE_ENV === 'development'){\r\n    await (process.env.SERVER_PORT = SERVER_PORT_DEV)\r\n    log({name: \"ENV VAR\",status:'reg', mode: `dev`, value: `server variables`})\r\n  }\r\n  else if(NODE_ENV === 'production '){\r\n    await (process.env.SERVER_PORT = SERVER_PORT_PROD)\r\n    log({name: \"ENV VAR\",status:'reg', mode: `prod`, value: `server variables`})\r\n  }\r\n  else{\r\n    log({name: \"ENV VAR\",status:'err', value:`no env var for server have been defined cause NODE_ENV is not in development or in production`})\r\n  }\r\n}\r\n\r\nexport default definePort\r\n","import log from 'my-own-logger' // logger\r\nimport express from 'express' //pour le routage\r\nimport bodyParser from 'body-parser' //pour parser un json\r\n\r\nimport * as rt from '../routes' // import des routes\r\n\r\nconst startServ = async () => {\r\n  const { SERVER_PORT } = process.env\r\n\r\n  //instantiation du serveur\r\n  const app = express()\r\n\r\n\r\n  //paramétrage du serveur\r\n  app.use(bodyParser.json()) //permet de recevoir un beau Json en body d'une requête\r\n  app.use(bodyParser.urlencoded({ extended: true }))\r\n\r\n  //connection des routes au SERVER_PORT\r\n  app.use('/gate', rt.GateRoute)\r\n  app.use('/users', rt.UsersRoute)\r\n\r\n\r\n  //lancement des routes /!\\ doit être lancé après la connexion à la base de donnée, sinon les schémas ne seront pas définis\r\n  await (rt.initializeRoutes(\r\n    (er) => {\r\n      if (er){\r\n        log({\r\n          name: 'Routes',\r\n          status: 'err',\r\n          value:err\r\n        })\r\n      }\r\n      else{\r\n        log({\r\n          name: 'Routes',\r\n          status: 'reg',\r\n          value:'are all initialized !'\r\n        })\r\n      }\r\n    }\r\n  ))\r\n\r\n  //lancement du serveur\r\n  await (app.listen(SERVER_PORT, () => {log({name: \"Express\",status:'reg', value: `is conected on port ${SERVER_PORT}`})}))\r\n\r\n}\r\n\r\nexport default startServ\r\n","import setEnvVar from './EnvVar'\r\nimport startDB from './mongo'\r\nimport startServ from './express'\r\n\r\nexport {setEnvVar, startDB, startServ}\r\n","import log from 'my-own-logger' // logger\r\nimport mongoose from 'mongoose'\r\nimport * as schemas from '../database/schemas'\r\n\r\nconst startDB = async () => {\r\n  //on importe les variables environnement préalablement définies\r\n  const {DB_HOSTNAME, DB_PORT, DB_NAME} = process.env\r\n\r\n  // on en déduit l'url de connexion de la bdd mongodb\r\n  const url = `mongodb://${DB_HOSTNAME}:${DB_PORT}/${DB_NAME}`\r\n\r\n  //on paramètre les options de la connexion à la base\r\n  const options ={\r\n    promiseLibrary: Promise,\r\n    useNewUrlParser: true,\r\n    useFindAndModify: false,\r\n    useCreateIndex: true,\r\n    connectTimeoutMS: 1000\r\n  }\r\n\r\n  //fonction permettant d'afficher les erreurs s'il y en a lors de la connexion à la base\r\n  const _mongooseConnectLogResult = (error) => {\r\n    if (error)\r\n      log({name: \"MongoDB\",status:'err', value: `${error}`})\r\n  }\r\n\r\n  //On paramètre les événement de mongoose\r\n  mongoose.connection.on(\"connecting\", () => {\r\n    log({name: \"MongoDB\",status:'wait', value: `is starting up...`})\r\n  })\r\n  mongoose.connection.on(\"connected\", () => {\r\n    log({name: \"MongoDB\",status:'reg', value: `is connected on port ${DB_PORT} !`})\r\n  })\r\n  mongoose.connection.on(\"disconnecting\", () => {\r\n    log({name: \"MongoDB\",status:'wait', value: `is diconnecting...`})\r\n  })\r\n  mongoose.connection.on(\"disconnected\", () => {\r\n    log({name: \"MongoDB\",status:'warn', value: `is disconnected !`})\r\n  })\r\n  mongoose.connection.on(\"error\", () => {\r\n    log({name: \"MongoDB\",status:'err', value: `error !`})\r\n  })\r\n\r\n  //on définit les schémas de la bdd\r\n  mongoose.model('User', schemas.usersSchema)\r\n  mongoose.model('History', schemas.historySchema)\r\n\r\n  //on lance et on attend la connexion à la base\r\n  await (mongoose.connect(url, options, _mongooseConnectLogResult))\r\n\r\n}\r\n\r\nexport default startDB\r\n","import express from 'express'\r\n\r\n//import des middlewares\r\nimport * as mdl from './middlewares'\r\n\r\n//instanciation de la route\r\nexport const GateRoute = express.Router()\r\n\r\nexport const initializeRoute = async () => {\r\n  GateRoute.put('/toogle', mdl.toogle)\r\n}\r\n","export { GateRoute, initializeRoute } from './gate'\r\n","import toogle from './toogle.js'\r\n\r\nexport { toogle }\r\n","import mongoose from 'mongoose'\r\nimport { RELAIS } from '../../../helpers/GPIO'\r\n\r\n//regarder dans la BDD si le token de l'utilisateur est bon\r\n\r\nconst toggle = async() => {\r\n  await RELAIS()\r\n}\r\nexport default toggle\r\n// middleware to execute when we are in gate/toogle on a PUT\r\n","//on importe toutes les routes\r\nimport * as gate from './gate'\r\nimport * as users from './users'\r\n\r\nconst UsersRoute = users.UsersRoute\r\nconst GateRoute = gate.GateRoute\r\n\r\nconst initializeRoutes = async (callback) => {\r\n  let errors\r\n  try{\r\n    await (gate.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n  try{\r\n    await (users.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n\r\n  !errors ? callback(errors) : callback()\r\n}\r\n\r\nexport {initializeRoutes, GateRoute, UsersRoute }\r\n","export { UsersRoute, initializeRoute } from './users'\r\n","import mongoose from 'mongoose'\r\n\r\n//authentification in users/amdin\r\n\r\nconst authentificate = (req, res, next) =>{\r\n  const User = mongoose.model('User')\r\n  const { token } = req.headers\r\n  const query = User.find({ token }, (er, data) => {\r\n    if (er){\r\n      log({\r\n        name: 'API',\r\n        status: 'err',\r\n        value: `error : ${ er }`\r\n      })\r\n      return res.status(500).send(`an internal server error occured on authentificating ${token}`)\r\n    }\r\n    if (data.length){\r\n      if(data.filter((user) => (user.isAdmin === true)).length){\r\n        res.status(200)\r\n        return next()\r\n      } else {\r\n        log({\r\n          name: 'API',\r\n          status: 'warn',\r\n          value: `somebody is trying to connect as admin with a wrong token : ${ data[0].username }`\r\n        })\r\n        return res.status(401).send('wrong token !')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport default authentificate\r\n","import mongoose from 'mongoose'\r\n\r\n// mdl appelé en delete sur /users/admin\r\n\r\nconst deleteUser = () => {}\r\n\r\nexport default deleteUser\r\n","import mongoose from 'mongoose'\r\nimport { userCode, basicsCode } from '../../../../codes'\r\n\r\nconst checkIfDataExists = async(type, req, res, next) => {\r\n  const User = mongoose.model('User')\r\n  let result, error\r\n  switch(type){\r\n    case 'email':\r\n      const { email } = req.body\r\n      result = await User.find({ email })\r\n      error = {...userCode.err.emailExists, data:email}\r\n      break\r\n    case 'username':\r\n      const { username } = req.body\r\n      result = await User.find({ username })\r\n      error = {...userCode.err.usernameExists, data:username}\r\n      break\r\n    case 'token':\r\n      result = await User.find({ token: req })\r\n      return result.length ? true : false\r\n      break\r\n    default:\r\n      log({name: 'API', status:'err', value:userCode.err.unknownTypeToCheck.description})\r\n      res.status(500).send(basicsCode.err.internalError.description)\r\n  }\r\n  try{\r\n    if(!result.length){\r\n      return next ()\r\n    }else{\r\n      res.status(409).send(`${error.code} - (${error.data}) ${error.description}`)\r\n    }\r\n  }\r\n  catch(er){\r\n    log({name: 'API', status:'err', value:er})\r\n    res.status(500).send(basicsCode.err.internalError.description)\r\n  }\r\n}\r\n\r\nexport default checkIfDataExists\r\n","import checkIfDataExists from './checkIfDataExists'\r\n\r\nexport { checkIfDataExists }\r\n","import deleteUser from './deleteUser'\r\nimport modifyUser from './modifyUser'\r\nimport * as newUser from './newUser'\r\nimport auth from './authentification'\r\n\r\nexport { newUser, modifyUser, deleteUser, auth }\r\n","import mongoose from 'mongoose'\r\n\r\n// mdl appelé en put sur /users/admin\r\n\r\nconst modifyUser = () => {}\r\n\r\nexport default modifyUser\r\n","import log from 'my-own-logger'\r\nimport mongoose from 'mongoose'\r\nimport crypto from 'crypto'\r\nimport { userCode, basicsCode } from '../../../codes'\r\n\r\nimport { checkIfDataExists } from './helpers'\r\n\r\n// mdl appelé en post sur /users/admin\r\n\r\nexport const isMailOk = async(req, res, next) => await checkIfDataExists('email', req, res, next)\r\nexport const isUsernameOk = async(req, res, next) => await checkIfDataExists('username', req, res, next)\r\nexport const register = async(req, res, next) =>{\r\n  const {lastname, name, username, email, password } = req.body\r\n  let token = crypto.randomBytes(32).toString('hex')\r\n  let i = 0\r\n  while ((await checkIfDataExists('token', token)) && (i<100)){\r\n    token = crypto.randomBytes(32).toString('hex')\r\n    i++\r\n  }\r\n\r\n  const safePwd = crypto.createHash('sha256').update(password).digest('hex')\r\n  const user = new mongoose.model('User')({\r\n    lastname, name, username, email, token,\r\n    password: safePwd,\r\n    isAdmin: false,\r\n  })\r\n  user.save((err, account) => {\r\n    if (err){\r\n      log({\r\n        name: 'Mongoose',\r\n        status: 'err',\r\n        value: `Error on creating ${ username } : ${ err }`\r\n      })\r\n      const iErr = basicsCode.err.internalError\r\n      return res.status(500).send(`${iErr.code} - ${iErr.description}`)\r\n    }\r\n    log({\r\n      name: 'Mongoose',\r\n      status: 'ok',\r\n      value: `${ username } was created !`\r\n    })\r\n    const uSuc = userCode.suc.userCreated\r\n    res.status(200).send(`${uSuc.code} - (${username}) ${uSuc.description}`)\r\n    return next()\r\n  })\r\n}\r\n","import express from 'express'\r\n\r\n//import des middlewares\r\nimport * as mdl from './middlewares'\r\n\r\n//instanciation de la route\r\nexport const UsersRoute = express.Router()\r\n\r\nexport const initializeRoute = async () => {\r\n  UsersRoute.use('/admin', mdl.auth)\r\n  UsersRoute.post('/admin',\r\n    mdl.newUser.isMailOk,\r\n    mdl.newUser.isUsernameOk,\r\n    mdl.newUser.register\r\n  )\r\n  UsersRoute.delete('/admin', mdl.deleteUser)\r\n  UsersRoute.put('/admin', mdl.modifyUser)\r\n}\r\n","module.exports = require(\"body-parser\");","module.exports = require(\"crypto\");","module.exports = require(\"express\");","module.exports = require(\"gpio\");","module.exports = require(\"mongoose\");","module.exports = require(\"my-own-logger\");"],"sourceRoot":""}