{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/codes/Basics/errors.js","webpack:///./src/codes/Basics/index.js","webpack:///./src/codes/Basics/success.js","webpack:///./src/codes/GPIOS/errors.js","webpack:///./src/codes/GPIOS/index.js","webpack:///./src/codes/GPIOS/success.js","webpack:///./src/codes/Raspberry/errors.js","webpack:///./src/codes/Raspberry/index.js","webpack:///./src/codes/Raspberry/success.js","webpack:///./src/codes/index.js","webpack:///./src/constantes.js","webpack:///./src/helpers/Raspberry.js","webpack:///./src/index.js","webpack:///./src/initialize/EnvVar.js","webpack:///./src/initialize/NODE_ENV/index.js","webpack:///./src/initialize/NODE_ENV/server.js","webpack:///./src/initialize/express.js","webpack:///./src/initialize/index.js","webpack:///./src/routes/command/command.js","webpack:///./src/routes/command/index.js","webpack:///./src/routes/command/middlewares/index.js","webpack:///./src/routes/command/middlewares/restartService.js","webpack:///./src/routes/images/images.js","webpack:///./src/routes/images/index.js","webpack:///./src/routes/images/middlewares/allImages.js","webpack:///./src/routes/images/middlewares/deleteImage.js","webpack:///./src/routes/images/middlewares/index.js","webpack:///./src/routes/images/middlewares/uniqueImage.js","webpack:///./src/routes/index.js","webpack:///./src/routes/temp/cpuTemp.js","webpack:///./src/routes/temp/index.js","webpack:///./src/routes/temp/middlewares/getCPUTemp.js","webpack:///./src/routes/temp/middlewares/index.js","webpack:///./src/routes/toogleGate/gate.js","webpack:///./src/routes/toogleGate/index.js","webpack:///./src/routes/toogleGate/middlewares/index.js","webpack:///./src/routes/toogleGate/middlewares/toogleGate.js","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"gpio\"","webpack:///external \"moment\"","webpack:///external \"my-own-logger\"","webpack:///external \"node-raspistill\"","webpack:///external \"path\"","webpack:///external \"pi-temperature\"","webpack:///external \"sharp\"","webpack:///external \"shelljs\""],"names":["internalError","code","description","ok","savePhotoError","takePhotoError","toogleGateError","relayOK","readingCPUTempError","rebootRasp","rebootServer","serviceUnknow","imageDeleted","SERVER_PORT_DEV","SERVER_PORT_PROD","RELAIS","gpio","export","direction","DIRECTION","OUT","interval","ready","log","name","status","value","turnOn","reset","set","turnOff","toogleGate","then","setTimeout","catch","e","GPIOSCode","err","takePhoto","now","Date","fileName","moment","format","outputDir","camera","Raspistill","time","restartRasp","shell","exec","RaspCode","restartServer","init","setEnvVar","definePort","cte","NODE_ENV","process","env","SERVER_PORT","mode","startServ","app","express","use","bodyParser","json","urlencoded","extended","cors","rt","er","listen","CommandRoute","Router","initializeRoute","post","md","restartService","req","res","params","service","send","suc","ImageRoute","get","delete","allImages","directoryPath","path","join","__dirname","fs","readdir","files","console","map","f","size","statSync","deleteImage","filePath","unlinkSync","basicsCode","mime","html","txt","css","gif","jpg","jpeg","png","svg","js","uniqueImage","file","type","extname","slice","width","heigth","query","transformer","sharp","resize","fit","inside","webp","quality","s","createReadStream","on","pipe","end","GateRoute","gate","TempRoute","temp","ImagesRoute","images","command","initializeRoutes","callback","errors","error","getCPUTemp","measure","postToogleGate"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const internalError = {\r\n  code: 'e500',\r\n  description: 'internal error occured'\r\n}\r\n","import * as err from './errors'\r\nimport * as suc from './success'\r\n\r\nexport { err, suc }\r\n","export const ok = {\r\n  code: 's200',\r\n  description: 'everything is fine !'\r\n}\r\n","export const savePhotoError = {\r\n  code: 'e1',\r\n  description: 'error during saving photo'\r\n}\r\nexport const takePhotoError = {\r\n  code: 'e2',\r\n  description: 'error during taking photo'\r\n}\r\nexport const toogleGateError = {\r\n  code: 'e3',\r\n  description: 'error during contacting relay'\r\n}\r\n","import * as err from './errors'\r\nimport * as suc from './success'\r\n\r\nexport { err, suc }\r\n","export const relayOK = {\r\n  code: 's1',\r\n  description: 'relay has been contacted'\r\n}\r\n","export const readingCPUTempError = {\r\n  code: 'e4',\r\n  description: 'error during reading CPU temperature'\r\n}\r\nexport const rebootRasp = {\r\n  code: 'e5',\r\n  description: 'error during rebooting raspberry'\r\n}\r\nexport const rebootServer = {\r\n  code: 'e6',\r\n  description: 'error during rebooting server'\r\n}\r\nexport const serviceUnknow = {\r\n  code: 'e7',\r\n  description: 'this service is unknow (from post/restart/:service)'\r\n}\r\n","import * as err from './errors'\r\nimport * as suc from './success'\r\n\r\nexport { err, suc }\r\n","export const imageDeleted = {\r\n  code: 's2',\r\n  description: 'image was deleted'\r\n}\r\nexport const rebootRasp = {\r\n  code: 's3',\r\n  description: 'raspberry was rebooted'\r\n}\r\nexport const rebootServer = {\r\n  code: 's4',\r\n  description: 'server was rebooted'\r\n}\r\n","import * as basicsCode from './Basics'\r\nimport * as GPIOSCode from './GPIOS'\r\nimport * as RaspCode from './Raspberry'\r\n\r\nexport { basicsCode, GPIOSCode, RaspCode }\r\n","//server constantes\r\nexport const SERVER_PORT_DEV = \"5973\" // port d'écoute du serveur en développement\r\nexport const SERVER_PORT_PROD = \"4957\" // port d'écoute du serveur en production\r\n","import gpio from 'gpio'\r\nimport log from 'my-own-logger'\r\nimport {Raspistill} from 'node-raspistill'\r\nimport moment from 'moment'\r\nimport shell from 'shelljs'\r\n\r\nimport { RaspCode } from '../codes'\r\n\r\n\r\nimport { GPIOSCode } from '../codes'\r\n\r\nexport const RELAIS = gpio.export(4, {\r\n  direction: gpio.DIRECTION.OUT,\r\n  interval: 500,\r\n  ready: () => log({name: 'GPIO', status: 'reg', value: 'is ready !'})\r\n}) // = on connecte le relais au GPIO 4, et on le configure en sortie\r\nconst turnOn = async () => {\r\n  await RELAIS.reset() // on le remet à zéro au cas où\r\n  await RELAIS.set() // puis on le passe à 1\r\n}\r\nconst turnOff = async () => {\r\n  await RELAIS.reset()  // on éteint le relais\r\n}\r\n\r\nexport const toogleGate = async() => {\r\n  return await turnOn()\r\n  .then(setTimeout(turnOff, 1000))\r\n  .catch(e => (GPIOSCode.err.toogleGateError))\r\n}\r\nexport const takePhoto = async() => {\r\n  log({name: 'Raspberry', status: 'wait', value: 'on prend une photo...'})\r\n  const now = new Date()\r\n  const fileName = moment().format('DD-MM-YYYY HH-mm-ss')\r\n  const outputDir = `./src/images`\r\n  const camera = new Raspistill({time:1, fileName, outputDir})\r\n  try {\r\n    await camera.takePhoto()\r\n    .then(log({name: 'Raspberry', status: 'ok', value: 'la photo est prise !'}))\r\n    .catch(e => (GPIOSCode.err.takePhotoError))\r\n  } catch (e) {\r\n    return GPIOSCode.err.takePhotoError\r\n  }\r\n}\r\n\r\nexport const restartRasp = async() => {\r\n  if (shell.exec('sudo reboot').code !== 0)\r\n    return RaspCode.err.rebootRasp\r\n}\r\nexport const restartServer = async() => {\r\n  if (shell.exec('npm restart').code !== 0)\r\n    return RaspCode.err.rebootServer\r\n}\r\n","import * as init from './initialize'\r\n\r\n//On démarre les différents services\r\ninit.setEnvVar()\r\n.then(init.startServ)\r\n","import definePort from './NODE_ENV'\r\n\r\nconst setEnvVar = async () => {\r\n  await definePort() // le port du serveur\r\n}\r\n\r\nexport default setEnvVar\r\n","export { default } from './server' //pour définir le port du server\r\n","import log from 'my-own-logger' // logger\r\nimport * as cte from '../../constantes' // on importe les valeurs des constantes qui sont exclues des exports github\r\n\r\nconst {SERVER_PORT_DEV} = cte\r\nconst {SERVER_PORT_PROD} = cte\r\n\r\n\r\nconst definePort = async () => {\r\n  const { NODE_ENV } = process.env\r\n  if (NODE_ENV === 'development'){\r\n    await (process.env.SERVER_PORT = SERVER_PORT_DEV)\r\n    log({name: \"ENV VAR\",status:'reg', mode: `dev`, value: `server variables`})\r\n  }\r\n  else if(NODE_ENV === 'production '){\r\n    await (process.env.SERVER_PORT = SERVER_PORT_PROD)\r\n    log({name: \"ENV VAR\",status:'reg', mode: `prod`, value: `server variables`})\r\n  }\r\n  else{\r\n    log({name: \"ENV VAR\",status:'err', value:`no env var for server have been defined cause NODE_ENV is not in development or in production`})\r\n  }\r\n}\r\n\r\nexport default definePort\r\n","import log from 'my-own-logger' // logger\r\nimport express from 'express' //pour le routage\r\nimport bodyParser from 'body-parser' //pour parser un json\r\nimport cors from 'cors'\r\n\r\nimport * as rt from '../routes' // import des routes\r\n\r\nconst startServ = async () => {\r\n  const { SERVER_PORT } = process.env\r\n\r\n  //instantiation du serveur\r\n  const app = express()\r\n\r\n\r\n  //paramétrage du serveur\r\n  app.use(bodyParser.json()) //permet de recevoir un beau Json en body d'une requête\r\n  app.use(bodyParser.urlencoded({ extended: true }))\r\n  app.use(cors())\r\n\r\n  //connection des routes au sever\r\n  app.use('/toogleGate', rt.GateRoute)\r\n  app.use('/temp', rt.TempRoute)\r\n  app.use('/images', rt.ImagesRoute)\r\n  app.use('/command', rt.CommandRoute)\r\n\r\n\r\n  //lancement des routes /!\\ doit être lancé après la connexion à la base de donnée, sinon les schémas ne seront pas définis\r\n  await (rt.initializeRoutes(\r\n    (er) => {\r\n      if (er){\r\n        log({\r\n          name: 'Routes',\r\n          status: 'err',\r\n          value:err\r\n        })\r\n      }\r\n      else{\r\n        log({\r\n          name: 'Routes',\r\n          status: 'reg',\r\n          value:'are all initialized !'\r\n        })\r\n      }\r\n    }\r\n  ))\r\n\r\n  //lancement du serveur\r\n  await (app.listen(SERVER_PORT, () => {log({name: \"Express\",status:'reg', value: `is conected on port ${SERVER_PORT}`})}))\r\n\r\n}\r\n\r\nexport default startServ\r\n","import setEnvVar from './EnvVar'\r\nimport startServ from './express'\r\n\r\nexport {setEnvVar, startServ }\r\n","import express from 'express'\r\nimport * as md from './middlewares'\r\n\r\n\r\n//instanciation de la route\r\nexport const CommandRoute = express.Router()\r\nexport const initializeRoute = async () => {\r\n  CommandRoute.post('/restart/:service', md.restartService)\r\n}\r\n","export { CommandRoute, initializeRoute } from './command'\r\n","import restartService from './restartService'\r\n\r\nexport { restartService }\r\n","import { RaspCode } from '../../../codes'\r\nimport { restartRasp, restartServer } from '../../../helpers/Raspberry'\r\nconst restartService = (req, res) => {\r\n\r\n  switch (req.params.service) {\r\n    case 'Raspberry':\r\n      restartRasp().then((err) => {\r\n        if (err) return res.status(200).send(RaspCode.err.rebootRasp)\r\n        else return res.status(200).send(RaspCode.suc.rebootRasp)\r\n      })\r\n      break\r\n    case 'Server':\r\n      restartServer().then((err) => {\r\n        if (err) return res.status(200).send(RaspCode.err.rebootServer)\r\n        else return res.status(200).send(RaspCode.suc.rebootServer)\r\n      })\r\n      break\r\n    default:\r\n      res.status(200).send(RaspCode.err.serviceUnknow)\r\n  }\r\n}\r\n\r\nexport default restartService\r\n","import express from 'express'\r\nimport * as md from './middlewares'\r\n\r\n\r\n//instanciation de la route\r\nexport const ImageRoute = express.Router()\r\nexport const initializeRoute = async () => {\r\n  ImageRoute.get('/all', md.allImages)\r\n  ImageRoute.get('/:name', md.uniqueImage)\r\n  ImageRoute.delete('/:name', md.deleteImage)\r\n}\r\n","export { ImageRoute, initializeRoute } from './images'\r\n","import path from 'path'\r\nimport fs from 'fs'\r\n\r\nconst allImages = (req, res) => {\r\n  const directoryPath = path.join(__dirname, '../../../images')\r\n  fs.readdir(directoryPath, (err, files) => {\r\n    if (err) return console.log('Unable to scan directory: ' + err)\r\n    else{\r\n      return res.status(200).send(files.map(f =>\r\n        {\r\n          const size = fs.statSync(path.join(__dirname, `../../../images/${f}`)).size / 1000.0\r\n          return {name: f, size}\r\n        }\r\n      ))\r\n    }\r\n  })\r\n}\r\n\r\nexport default allImages\r\n","import path from 'path'\r\nimport fs from 'fs'\r\nimport log from 'my-own-logger'\r\nimport { basicsCode, RaspCode } from '../../../codes'\r\n\r\nconst deleteImage = (req, res) => {\r\n  const filePath = path.join(__dirname, '../../../images', req.params.name)\r\n  try {\r\n    fs.unlinkSync(filePath)\r\n    log({name:'Raspberry', value:'l\\'image a été supprimée', status: 'ok'})\r\n    return res.status(200).send(RaspCode.suc.imageDeleted)\r\n  } catch(err) {\r\n    log({name:'Raspberry',  status: 'err', value:'erreur lors de la suppression de l\\'image'})\r\n    return res.status(200).send(basicsCode.err.internalError)\r\n  }\r\n}\r\n\r\nexport default deleteImage\r\n","import allImages from './allImages'\r\nimport uniqueImage from './uniqueImage'\r\nimport deleteImage from './deleteImage'\r\n\r\n\r\nexport { allImages, uniqueImage, deleteImage }\r\n","import path from 'path'\r\nimport fs from 'fs'\r\nimport sharp from 'sharp'\r\n\r\nvar mime = {\r\n    html: 'text/html',\r\n    txt: 'text/plain',\r\n    css: 'text/css',\r\n    gif: 'image/gif',\r\n    jpg: 'image/jpeg',\r\n    jpeg: 'image/jpeg',\r\n    png: 'image/png',\r\n    svg: 'image/svg+xml',\r\n    js: 'application/javascript'\r\n};\r\n\r\nconst uniqueImage = async(req, res) => {\r\n    let file = path.join(__dirname, `../../../images/${req.params.name}`)\r\n    const type = mime[path.extname(file).slice(1)] || 'text/plain';\r\n    const { width, heigth } = req.query\r\n    const transformer = sharp()\r\n      .resize({\r\n        width: 200,\r\n        fit: sharp.fit.inside\r\n      })\r\n      .webp({\r\n        quality:100\r\n      });\r\n    const s = fs.createReadStream(file)\r\n\r\n    s.on('open', function () {\r\n        res.set('Content-Type', type);\r\n        s.pipe(transformer).pipe(res)\r\n    })\r\n    s.on('error', function () {\r\n        res.set('Content-Type', 'text/plain')\r\n        res.status(404).end('Not found')\r\n    })\r\n}\r\n\r\nexport default uniqueImage\r\n","//on importe toutes les routes\r\nimport * as gate from './toogleGate'\r\nimport * as temp from './temp'\r\nimport * as images from './images'\r\nimport * as command from './command'\r\n\r\nexport const GateRoute = gate.GateRoute\r\nexport const TempRoute = temp.TempRoute\r\nexport const ImagesRoute = images.ImageRoute\r\nexport const CommandRoute = command.CommandRoute\r\n\r\nexport const initializeRoutes = async (callback) => {\r\n  let errors\r\n  try{\r\n    await (gate.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n  try{\r\n    await (temp.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n  try{\r\n    await (images.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n  try{\r\n    await (command.initializeRoute())\r\n  }\r\n  catch (error){\r\n    errors += error\r\n  }\r\n  !errors ? callback(errors) : callback()\r\n}\r\n","import express from 'express'\r\nimport { getCPUTemp } from './middlewares'\r\n\r\n\r\n//instanciation de la route\r\nexport const TempRoute = express.Router()\r\nexport const initializeRoute = async () => {\r\n  TempRoute.get('/cpu', getCPUTemp)\r\n}\r\n","export { TempRoute, initializeRoute } from './cpuTemp'\r\n","import temp from 'pi-temperature'\r\nimport log from 'my-own-logger'\r\n\r\nimport { RaspCode } from '../../../codes'\r\n\r\n\r\nexport const getCPUTemp = async(req, res) => {\r\n  try{\r\n    temp.measure((err, temp) => {\r\n        if (err){\r\n          log({name:'Raspberry', status:'err', value:RaspCode.err.readingCPUTempError.description})\r\n          return res.status(200).send(RaspCode.err.readingCPUTempError)\r\n        }\r\n        else{\r\n          log({name:'Raspberry', status:'info', value:`CPU temp : ${temp}`})\r\n          return res.status(200).send({temp})\r\n        }\r\n    })\r\n  } catch (e) {\r\n    log({name:'Raspberry', status:'err', value:RaspCode.err.readingCPUTempError.description})\r\n    return res.status(200).send(RaspCode.err.readingCPUTempError)\r\n  }\r\n}\r\n","export { getCPUTemp } from './getCPUTemp'\r\n","import express from 'express'\r\nimport { postToogleGate } from './middlewares'\r\n\r\n\r\n//instanciation de la route\r\nexport const GateRoute = express.Router()\r\nexport const initializeRoute = async () => {\r\n  GateRoute.post('/', postToogleGate)\r\n}\r\n","export { GateRoute, initializeRoute } from './gate'\r\n","export { postToogleGate } from './toogleGate'\r\n","import { toogleGate, takePhoto } from '../../../helpers/Raspberry'\r\nimport { basicsCode, GPIOSCode } from '../../../codes'\r\n\r\n\r\nexport const postToogleGate = async(req, res) => {\r\n  return toogleGate()\r\n  .then(err => {\r\n    if (err) return res.status(200).send(err)\r\n    else return takePhoto().then(err => {\r\n      if (err) return res.status(200).send({...err, description: `${err.description} but gate is toogled !`})\r\n      else return res.status(200).send(GPIOSCode.suc.relayOK)\r\n    })\r\n  })\r\n\r\n}\r\n","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"gpio\");","module.exports = require(\"moment\");","module.exports = require(\"my-own-logger\");","module.exports = require(\"node-raspistill\");","module.exports = require(\"path\");","module.exports = require(\"pi-temperature\");","module.exports = require(\"sharp\");","module.exports = require(\"shelljs\");"],"sourceRoot":""}